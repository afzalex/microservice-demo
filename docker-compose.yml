version: "3.9"
services:
  eureka:
    build: ./eureka-server
    container_name: micro-eureka
    ports:
      - 6660:6660

  gateway:
    build: ./gateway-server
    container_name: micro-gateway
    environment:
      - EUREKA_HOST=eureka
    ports:
      - 6669:6669

  product:
    build: ./product-service
    environment:
      - EUREKA_HOST=eureka
      - LOGSTASH_HOST=elasticsearch
    ports:
      - 6661:6661
  order:
    build: ./order-service
    environment:
      - EUREKA_HOST=eureka
      - LOGSTASH_HOST=elasticsearch
    ports:
      - 6662:6662






##########################################################
################## ELK Stack #############################

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: micro-elastic
#    volumes:
#      - type: bind
#        source: ./elasticsearch/config/elasticsearch.yml
#        target: /usr/share/elasticsearch/config/elasticsearch.yml
#        read_only: true
#      - type: volume
#        source: elasticsearch
#        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: micro-logstash
#    volumes:
#      - type: bind
#        source: ./logstash/config/logstash.yml
#        target: /usr/share/logstash/config/logstash.yml
#        read_only: true
#      - type: bind
#        source: ./logstash/pipeline
#        target: /usr/share/logstash/pipeline
#        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
#    networks:
#      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: micro-kibana
#    volumes:
#      - type: bind
#        source: ./kibana/config/kibana.yml
#        target: /usr/share/kibana/config/kibana.yml
#        read_only: true
    ports:
      - "5601:5601"
#    networks:
#      - elk
    depends_on:
      - elasticsearch

#networks:
#  elk:
#    driver: bridge
#
#volumes:
#  elasticsearch:

################## ELK Stack #############################
##########################################################

  zipkinserver:
    image: openzipkin/zipkin
    container_name: micro-zipkin
    ports:
      - '9411:9411'

  axonserver:
    build: 
      context: axonserver
      # image: axoniq/axonserver
      # hostname: axonserver
    container_name: micro-axon
    volumes:
      - ./.data/axon/data:/data
      - ./.data/axon/eventdata:/eventdata
      # - axonserver-config:/config:ro
    ports:
      - '8024:8024'
      - '8124:8124'
      - '8224:8224'